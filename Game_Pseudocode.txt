#Pseudocode for Game
LED_G=HIGH;
LED_R=LOW;
Buzzer=HIGH;
Delay(2000); # here 2000 means 2sec
Buzzer=LOW;
Timer=0; #for counting the time duration of play
start_timer(Timer); 
monitor(Timer); #Lets assume start_timer(Timer) is a function which starts timer and monitor displays the same on LED display and continuously updates time
Current_state=Stable_state;  #initial state of the machine



void loop()#runs for infinite time or till it finds exit()
{
Angle=Track_angle(angle_sensor); #assuming Track angle gives angle in degrees
PIR=Track(PIR)  #track value could be 1 or 0 based on whether there's some obstacle in the form of hand(in game we considered hand is the obstacle) in the case of IR
IR_sensor=Track_obstacle(IR)#contious monitoring function for IR sensor

switch(Current_state) #start with a state stored in Current_state
{

case(Stable_state):
	if(IR_sensor==0 && PIR==0)
	{
		Current_state=Move_left;
	}
	else if(IR_sensor==1 && PIR==0)
	{
		Current_state=Move_right;
	}
	else
		Current_state=cheat;

case(Move_left):
	if(IR_sensor==0 && PIR==0)
	{
		Current_state=Move_left;
	}
	else if(IR_sensor==1 && PIR==0)
	{
		Current_state=Move_right;
	}
	else if (PIR==0 && (Angle>85 && Angle<-85))
	{
		Current_state=Stop;
	}
	else
		Current_state=cheat;
case(Move_right):
	if(IR_sensor==0 && PIR==0)
	{
		Current_state=Move_left;
	}
	else if(IR_sensor==1 && PIR==0)
	{
		Current_state=Move_right;
	}
	else if (PIR==0 && (Angle>85 && Angle<-85))
	{
		Current_state=Stop;
	}
	else
		Current_state=cheat;

case(cheat):
	Current_state=Stop;
	LED_R=HIGH;
case(Stop):
	LED_G=LOW;
	for(i=1;i<3;i++) #for 3 beeps with 1sec interval and for 1sec duration
	{
		Buzzer=HIGH;
		Delay(1000);
		Buzzer=LOW;
		Delay(1000);
                if(i==2)
			{
				Buzzer=HIGH;
				Delay(1000);	
			}
	}
	stop_timer(Timer);# stops timer and time remains constant on LED display which is the play time of course
	exit(); #it halts the void loop

}
} 